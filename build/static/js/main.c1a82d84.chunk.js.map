{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","panels/Stickers.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","header","mode","before","photo_200","src","description","city","title","first_name","last_name","stretched","size","onClick","Persik","props","left","className","persik","alt","stickers","price","Stickers","useState","setShowModal","show","console","log","style","display","padding","map","sticker","flexDirection","maxWidth","maxHeight","margin","marginTop","App","activePanel","setActivePanel","popout","setPopout","useEffect","bridge","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","e","currentTarget","dataset","to","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c1a82d84.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"stickers\">\n\t\t\t\t\tShow me the Stickers\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Button, ModalCard, Panel, PanelHeader, PanelHeaderBack} from '@vkontakte/vkui';\n\nconst stickers = [{\n    id: 1,\n    src: \"https://images.pexels.com/photos/20787/pexels-photo.jpg?auto=compress&cs=tinysrgb&h=350\",\n    price: 50\n},\n    {\n        id: 2,\n        src: \"https://images.pexels.com/photos/20787/pexels-photo.jpg?auto=compress&cs=tinysrgb&h=350\",\n        price: 60\n    }]\n\nconst Stickers = props => {\n    const [showModal, setShowModal] = useState(false)\n\n    const show = () => {\n      setShowModal(true)\n        console.log(\"lolkek\")\n    }\n\n    return (<Panel id={props.id}>\n            <PanelHeader\n                left={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n            >\n                Stickers\n            </PanelHeader>\n            {/*<ModalCard visible={showModal}/>*/}\n            <div style={{display: \"flex\", padding: \"5px\"}}>\n                {stickers.map(sticker =>\n                    <div style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        maxWidth: \"300px\",\n                        maxHeight: \"500px\",\n                        margin: \"10px\"\n                    }} key={sticker.id}>\n                        <img src={sticker.src}/>\n                        <Button style={{marginTop: \"4px\"}} onClick={show} stretched size=\"l\" >\n                            Купи меня за {sticker.price} голосов\n                        </Button>\n                    </div>\n                )}\n            </div>\n        </Panel>\n    );\n}\n\nStickers.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n};\n\nexport default Stickers;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Stickers from \"./panels/Stickers\";\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\t// async function fetchData() {\n\t\t// \tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t// \tsetUser(user);\n\t\t// \tsetPopout(null);\n\t\t// }\n\t\t// fetchData();\n\t\tsetPopout(null);\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t\t<Stickers id='stickers' go={go} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}